<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="rdbCarPlateAndCardMode.Text" xml:space="preserve">
    <value>車牌 + 卡片</value>
  </data>
  <data name="rdbCarPlateMode.Text" xml:space="preserve">
    <value>車牌</value>
  </data>
  <data name="label31.Text" xml:space="preserve">
    <value>進出憑證</value>
  </data>
  <data name="chkWeigand34.Text" xml:space="preserve">
    <value>使用韋根34協議</value>
  </data>
  <data name="chkOnlineHandleWhenNotOnList.Text" xml:space="preserve">
    <value>卡片不在名單中轉在線處理</value>
  </data>
  <data name="chkRoadGateModel.Text" xml:space="preserve">
    <value>路閘模式</value>
  </data>
  <data name="chkNoParkingCount.Text" xml:space="preserve">
    <value>不進行車位計數</value>
  </data>
  <data name="chkExportCharge.Text" xml:space="preserve">
    <value>出口收費</value>
  </data>
  <data name="chkForbidWhenFull.Text" xml:space="preserve">
    <value>車輛滿位時禁止取卡</value>
  </data>
  <data name="chkForbidWhenCardExpired.Text" xml:space="preserve">
    <value>禁止過期卡片進出場</value>
  </data>
  <data name="chkEnableTempCard.Text" xml:space="preserve">
    <value>允許臨時卡進出場</value>
  </data>
  <data name="chkLightEnable.Text" xml:space="preserve">
    <value>使用補光燈</value>
  </data>
  <data name="label29.Text" xml:space="preserve">
    <value>讀卡間隔(s)</value>
  </data>
  <data name="chkAllowEjectCardWhithoutRead.Text" xml:space="preserve">
    <value>允許取卡后再刷卡</value>
  </data>
  <data name="chkTakeCardNeedCarSense.Text" xml:space="preserve">
    <value>取卡要求壓地感</value>
  </data>
  <data name="rdOnline.Text" xml:space="preserve">
    <value>在線</value>
  </data>
  <data name="rdOffLine.Text" xml:space="preserve">
    <value>脫機</value>
  </data>
  <data name="label34.Text" xml:space="preserve">
    <value>出入類型</value>
  </data>
  <data name="label33.Text" xml:space="preserve">
    <value>控制器類型</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>選項</value>
  </data>
  <data name="label35.Text" xml:space="preserve">
    <value>序列號</value>
  </data>
  <data name="label32.Text" xml:space="preserve">
    <value>伺服器端口</value>
  </data>
  <data name="label28.Text" xml:space="preserve">
    <value>伺服器IP</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>軟體版本</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>硬體版本</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>通訊協議版本</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>設備地址</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>停車場編號</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>控制端口號</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>事件端口號</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>網関</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>子網掩碼</value>
  </data>
  <data name="label15.Text" xml:space="preserve">
    <value>第1路識別車牌需發送的控制器</value>
  </data>
  <data name="label12.Text" xml:space="preserve">
    <value>第2路識別車牌需發送的控制器</value>
  </data>
  <data name="label13.Text" xml:space="preserve">
    <value>第2路識別車牌需發送的控制器</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>詳細信息</value>
  </data>
</root>